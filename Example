-------------Library Currently untested---------------------
local espLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/Atlas425/EspLib/refs/heads/main/API'))()

local textTable = {
	{Icon = "rbxassetid://10739290877", Text = "Enemies: " .. "6"},
	{Icon = "rbxassetid://14732311568", Text = "$173"},
	{Icon = "rbxassetid://6427877531", Text = "Fuel: " .. "216%"},
}

espLib.addDisplayBox(game.Workspace.TargetModel, textTable) -- Creates a billboardgui text box with icons/text grid based on model size.
--No primary part is needed for this because it creates a center part as the billboard adornee in the middle of the model, so any model is valid.

local espSettings = {
    Boxes = false,
    CornerBoxes = false,
    Snaplines = false,
    FovCircle = false,
    Skeleton = false,
    Nametags = false,
    Font = Enum.Font.RobotoCondensed,
    ChamsAlwaysOnTop = true,
}

--Every espSetting will have a corresponding cache table with the target model/part as the key (cache.Chams, cache.CornerBoxes, etc)
--Every espSetting also has a corresponding color (espSettings.Color)

local model = game.Workspace.TargetModel
local mousePos = game.UserInputService:GetMouseLocation()
local modelPos = model.Head.Position

espLib.DrawSnaplines(model, mousePos, modelPos) --Draws snapline from center of screen to mouse, TargetModel is the key. Automatically converts Position or CFrame to 2d vector.
espLib.drawFOVCircle(false) --Draws simple fov circle based on configuration settings.
espLib.drawFOVCircle(true) --Updates any existing circles radius and position to espsettings radius. (Useful if window size changes, or you want to change fov circle radius)
espLib.createChams(game.Workspace.TargetModel) --Creates chams based on settings for every single basepart found in TargetModel. A basepart can also be passed to this function.
espLib.chamsTween(game.Workspace.TargetModel) --Creates color tweening effect to espColors.ChamsTweenEnd if chams already exist for that model. Useful as a death effect, or smooth color changing transitioning.

espLib.removeSnapline(game.Workspace.TargetModel) --Removes any active snapline for TargetModel.
